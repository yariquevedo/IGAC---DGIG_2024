#SEMILLERO DE INVESTIGACIÓN Y DESARROLLO 
#FECHA DE REALIZACIÓN: 21/04/2024
#DESCRIPCIÓN: SCRIPT QUE PERMITE DIVIDIR LAS VEREDAS EN COMÚN ENTRE DOS MUNICIPIOS Y AGREGAR A CADA POLÍGOO EL NOMBRE
#YARITZA QUEVEDO
#----------------------------------------------------------------------------
import arcpy, os


#municipios = r"\\172.26.0.20\Elite_Sub_Geografia_Cartografia\Coberturas\GDB_FLET_Agosto_2023.gdb\Limites_Entidades_Territoriales\Munpio"

ruta_salida = arcpy.GetParameterAsText(0)
municipios = arcpy.GetParameterAsText(1)
veredas = arcpy.GetParameterAsText(2)

# Sobrescribir datos de salida si es necesario
arcpy.env.overwriteOutput = True

# Crear geodatabase temporal
GDB_temp_result = arcpy.management.CreateFileGDB(ruta_salida, "GDB_temp.gdb")
GDB_temp = GDB_temp_result.getOutput(0)  # Obtener el nombre completo de la geodatabase temporal

def division(municipios, veredas):
    # Intersectar el límite del municipios con las veredas
    select = arcpy.management.SelectLayerByLocation(veredas, "CROSSED_BY_THE_OUTLINE_OF", municipios)
    arcpy.AddMessage("Seleccionando veredas")

    #Copiar las veredas que se intersectan con los límites del municipio
    copia = arcpy.management.CopyFeatures(select, os.path.join(GDB_temp, "copia_veredas"))
    
    #Dividir las veredas de acuerdo a los límites municipales
    dividir = arcpy.analysis.Intersect([municipios, copia], os.path.join(GDB_temp, "veredas_divididas"), "ALL", "", "INPUT")
    return dividir

veredas_divididas = division(municipios, veredas)


campos = ["FID", "SHAPE@", "Nombre"]
with arcpy.da.UpdateCursor(veredas_divididas, campos) as cursor:
    for row in cursor:
        vereda_id = row[0]
        nombre_vereda = arcpy.management.SelectLayerByAttribute(veredas, "NEW_SELECTION", f"FID = {vereda_id}").getValue("Nombre")
        row[2] = nombre_vereda
        cursor.updateRow(row)

# Guardar el resultado en la ruta de salida
arcpy.CopyFeatures_management(veredas_divididas, os.path.join(ruta_salida, "veredas_divididas"))
